/* eslint-disable no-trailing-spaces */
/* eslint-disable max-len */
/*


Input: Two particular user inputs
Output: A computer input

Rules:

The two user inputs must set up a win with one more move.
The computer's next move must block the player's win.


Data Structure:

Input:

Player inputs two markers.

Output:

If the two markers are included in a winning line, 
computer's next move will be the third number of that line.

Otherwise, computer will move at random.

Examples and Test Cases:

Input:                    Output:

Player inputs 1 and 2     Computer inputs 3
Player inputs 4 and 5     Computer inputs 6

if (
      board[sq1] === HUMAN_MARKER &&
      board[sq2] === HUMAN_MARKER &&
      ) {
        board[sq3] === COMPUTER_MARKER;
      }

Algorithm:

function computerDefence(board) {
  let winningLines = [
    [1, 2, 3],
    [4, 5, 6],
    [7, 8, 9],
    [1, 4, 7],
    [2, 5, 8],
    [3, 6, 9],
    [1, 5, 9],
    [3, 5, 7]
  ];

  for (let line = 0; line < winningLines.length; line++) {
    let [ sq1, sq2, sq3 ] = winningLines[line];

    if (
      board[sq1] === HUMAN_MARKER &&
      board[sq2] === HUMAN_MARKER
    ) {
      return board[sq3];
    } else {
      break;
    }

if (
      board[sq1] === HUMAN_MARKER &&
      board[sq2] === HUMAN_MARKER;
      ) {
        board[sq3] === COMPUTER_MARKER;
      }


*/

Break for defence not needed
Computer input block if defence needed

